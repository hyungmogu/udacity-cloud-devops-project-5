apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: server
  name: server
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: server
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.network/backend-default: "true"
        io.kompose.service: server
    spec:
      containers:
        - image: $DOCKER_IMAGE_NAME:$BUILD_NUMBER
          name: server
          ports:
            - containerPort: 8004
          args:
            - python
            - app.py
          env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                configMapKeyRef:
                  key: AWS_ACCESS_KEY_ID
                  name: env
            - name: AWS_OBJECT_EXPIRES_IN
              valueFrom:
                configMapKeyRef:
                  key: AWS_OBJECT_EXPIRES_IN
                  name: env
            - name: AWS_S3_BUCKET
              valueFrom:
                configMapKeyRef:
                  key: AWS_S3_BUCKET
                  name: env
            - name: AWS_S3_REGION
              valueFrom:
                configMapKeyRef:
                  key: AWS_S3_REGION
                  name: env
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                configMapKeyRef:
                  key: AWS_SECRET_ACCESS_KEY
                  name: env
          livenessProbe:
            httpGet:
              path: /health
              port: 8004
            initialDelaySeconds: 15
            timeoutSeconds: 1
            periodSeconds: 10
          resources:
            requests:
              cpu: 200m
      restartPolicy: Always
status: {}
