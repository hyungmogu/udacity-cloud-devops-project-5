apiVersion: apps/v1
kind: Deployment
metadata:
  name: server-jpg-deployment
  namespace: image-converter-main
  labels:
    app: server-jpg
spec:
  replicas: 1
  selector:
    matchLabels:
      app: server-jpg-main-pod 
  template:
    metadata:
      labels:
        app: server-jpg-main-pod
    spec:
      containers:
        - image: $DOCKER_ID/$DOCKER_IMAGE_NAME-jpg:$IMAGE_BUILD_NUMBER
          name: server-jpg-main-pod
          ports:
            - containerPort: $SERVER_JPG_PORT
          args:
            - python
            - app.py
          env:
            - name: SERVER_JPG_PORT
              valueFrom:
                configMapKeyRef:
                  key: SERVER_JPG_PORT
                  name: server-jpg-env
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                configMapKeyRef:
                  key: AWS_ACCESS_KEY_ID
                  name: server-jpg-env
            - name: AWS_OBJECT_EXPIRES_IN
              valueFrom:
                configMapKeyRef:
                  key: AWS_OBJECT_EXPIRES_IN
                  name: server-jpg-env
            - name: AWS_S3_BUCKET
              valueFrom:
                configMapKeyRef:
                  key: AWS_S3_BUCKET
                  name: server-jpg-env
            - name: AWS_DEFAULT_REGION
              valueFrom:
                configMapKeyRef:
                  key: AWS_DEFAULT_REGION
                  name: server-jpg-env
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                configMapKeyRef:
                  key: AWS_SECRET_ACCESS_KEY
                  name: server-jpg-env
          livenessProbe:
            httpGet:
              path: /health
              port: $SERVER_JPG_PORT
            initialDelaySeconds: 15
            timeoutSeconds: 1
            periodSeconds: 10
          resources:
            requests:
              cpu: 200m
            limits:
              cpu: 500m

